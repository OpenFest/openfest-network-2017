# A simple configuration file for monitoring the local host
# This can serve as an example for configuring other servers;
# Custom services specific to this host are added here, but services
# defined in nagios2-common_services.cfg may also apply.
# 

define host{
        use                     generic-host            ; Name of host template to use
        host_name               eric
        alias                   eric
        address                 127.0.0.1
        }

# Define a service to check the disk space of the root partition
# on the local machine.  Warning if < 20% free, critical if
# < 10% free space on partition.

define service{
        use                             generic-service         ; Name of service template to use
        host_name                       eric
        service_description             Disk Space
        check_command                   check_all_disks!20%!10%
        }



# Define a service to check the number of currently logged in
# users on the local machine.  Warning if > 20 users, critical
# if > 50 users.

define service{
        use                             generic-service         ; Name of service template to use
        host_name                       eric
        service_description             Current Users
        check_command                   check_users!20!50
        }


# Define a service to check the number of currently running procs
# on the local machine.  Warning if > 250 processes, critical if
# > 400 processes.

define service{
        use                             generic-service         ; Name of service template to use
        host_name                       eric
        service_description             Total Processes
		check_command                   check_procs!250!400
        }



# Define a service to check the load on the local machine. 

define service{
        use                             generic-service         ; Name of service template to use
        host_name                       eric
        service_description             Current Load
	notifications_enabled 0
		check_command                   check_load!7.0!6.0!5.0!7.5!7.0!6.5
        }


# stream Count
define service {
	use	generic-service
	host_name	eric
	service_description	Stream Count
	check_command	check_stream_count!5!3
}

;# Bulgaria - hd
; moved to separate host
;define service {
;	use			generic-service
;	host_name		eric
;	service_description	Bulgaria HD stream / ERIC
;	check_command		check_rtmp!rtmp://127.0.0.1/st/bulgaria-hd
;}
;define service {
;	use			generic-service
;	host_name		eric
;	service_description	Bulgaria HD stream / MARLA
;	check_command		check_rtmp!rtmp://79.98.105.21/st/bulgaria-hd
;}
;define service {
;	use			generic-service
;	host_name		eric
;	service_description	Bulgaria HD stream / HAWK
;	check_command		check_rtmp!rtmp://79.124.31.206/st/bulgaria-hd
;}
;
;# Bulgaria SD
;define service {
;	use			generic-service
;	host_name		eric
;	service_description	Bulgaria stream / ERIC
;	check_command		check_rtmp!rtmp://127.0.0.1/st/bulgaria
;}
;define service {
;	use			generic-service
;	host_name		eric
;	service_description	Bulgaria stream / MARLA
;	check_command		check_rtmp!rtmp://79.98.105.21/st/bulgaria
;}
;define service {
;	use			generic-service
;	host_name		eric
;	service_description	Bulgaria stream / HAWK
;	check_command		check_rtmp!rtmp://79.124.31.206/st/bulgaria
;}
;
;# Chambler SD
;define service {
;	use			generic-service
;	host_name		eric
;	service_description	CHAMBER stream / ERIC
;	check_command		check_rtmp!rtmp://127.0.0.1/st/chamber
;}
;define service {
;	use			generic-service
;	host_name		eric
;	service_description	CHAMBER stream / MARLA
;	check_command		check_rtmp!rtmp://79.98.105.21/st/chamber
;}
;define service {
;	use			generic-service
;	host_name		eric
;	service_description	CHAMBER stream / HAWK
;	check_command		check_rtmp!rtmp://79.124.31.206/st/chamber
;}

# Grafana
define service {
	use			generic-service
	host_name		eric
	service_description	Grafana
	check_command		check_http_host_port!eric.openfest.org!127.0.0.1!3000
}

# Graphite - web
define service {
	use			generic-service
	host_name		eric
	service_description	Graphite - web
	check_command		check_http_host_port!eric.openfest.org!127.0.0.1!8080
}

# carbon - aggregator
define service {
	use			generic-service
	host_name		eric
	service_description	Graphite - carbon-aggregator-line
	check_command		check_tcp_port!10001
}
define service {
	use			generic-service
	host_name		eric
	service_description	Graphite - carbon-aggregator-pickle
	check_command		check_tcp_port!10101
}

# carbon - cache
define service {
	use			generic-service
	host_name		eric
	service_description	Graphite - carbon-cache-line
	check_command		check_tcp_port!2003
}
define service {
	use			generic-service
	host_name		eric
	service_description	Graphite - carbon-cache-pickle
	check_command		check_tcp_port!2004
}
define service {
	use			generic-service
	host_name		eric
	service_description	Graphite - carbon-cache-cache
	check_command		check_tcp_port!2005
}

# Unbound
define service {
	use			generic-service
	host_name		eric
	service_description	DNS - unbound
	check_command		custom_check_dns
}

# memcached
define service {
        use                     generic-service
        host_name               eric
        service_description     Memcached
        check_command           check_tcp_port!11211
}
